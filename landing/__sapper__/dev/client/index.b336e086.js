import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, a as assign, v as validate_slots, e as exclude_internal_props, b as svg_element, c as claim_element, f as children, g as detach_dev, h as attr_dev, j as add_location, k as set_svg_attributes, l as insert_dev, m as append_dev, n as get_spread_update, o as noop, w as writable, p as validate_each_argument, q as validate_store, r as component_subscribe, t as element, u as text, x as space, y as claim_text, z as claim_space, A as listen_dev, B as set_data_dev, C as toggle_class, D as create_component, E as claim_component, F as mount_component, G as transition_in, H as transition_out, I as destroy_component, J as destroy_each, K as onMount, L as action_destroyer } from './client.a0ed014d.js';

/* src/icons/Arrow.svg generated by Svelte v3.21.0 */

const file = "src/icons/Arrow.svg";

function create_fragment(ctx) {
	let svg;
	let path;

	let svg_levels = [
		{ width: "16" },
		{ height: "16" },
		{ viewBox: "0 0 16 16" },
		{ fill: "none" },
		{ xmlns: "http://www.w3.org/2000/svg" },
		/*$$props*/ ctx[0]
	];

	let svg_data = {};

	for (let i = 0; i < svg_levels.length; i += 1) {
		svg_data = assign(svg_data, svg_levels[i]);
	}

	const block = {
		c: function create() {
			svg = svg_element("svg");
			path = svg_element("path");
			this.h();
		},
		l: function claim(nodes) {
			svg = claim_element(
				nodes,
				"svg",
				{
					width: true,
					height: true,
					viewBox: true,
					fill: true,
					xmlns: true
				},
				1
			);

			var svg_nodes = children(svg);
			path = claim_element(svg_nodes, "path", { d: true, fill: true }, 1);
			children(path).forEach(detach_dev);
			svg_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(path, "d", "M0 4H16L8 16L0 4Z");
			attr_dev(path, "fill", "#731DD8");
			add_location(path, file, 1, 0, 109);
			set_svg_attributes(svg, svg_data);
			add_location(svg, file, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, svg, anchor);
			append_dev(svg, path);
		},
		p: function update(ctx, [dirty]) {
			set_svg_attributes(svg, get_spread_update(svg_levels, [
				{ width: "16" },
				{ height: "16" },
				{ viewBox: "0 0 16 16" },
				{ fill: "none" },
				{ xmlns: "http://www.w3.org/2000/svg" },
				dirty & /*$$props*/ 1 && /*$$props*/ ctx[0]
			]));
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(svg);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Arrow", $$slots, []);

	$$self.$set = $$new_props => {
		$$invalidate(0, $$props = assign(assign({}, $$props), exclude_internal_props($$new_props)));
	};

	$$self.$inject_state = $$new_props => {
		$$invalidate(0, $$props = assign(assign({}, $$props), $$new_props));
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$props = exclude_internal_props($$props);
	return [$$props];
}

class Arrow extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Arrow",
			options,
			id: create_fragment.name
		});
	}
}

var currentLanguage = "укр";
var languages = [
	{
		key: "ua",
		name: "українська"
	},
	{
		key: "ru",
		name: "російська"
	}
];
var menu = {
	download: "Завантажити",
	advantages: "Переваги",
	features: "Особливості",
	contact: "Зв’язатись"
};
var download = {
	title: "Medlibra",
	titleDescription: "мобільний застосунок №1 для підготовки до КРОК",
	downloadFree: "Завантажити безкоштовно"
};
var advantages = {
	overview: [
		{
			title: "5",
			content: "Типів КРОК\n(1, 2, 3, М, Б)"
		},
		{
			title: "20",
			content: "Окремих\nспеціалізацій"
		},
		{
			title: "3 000",
			content: "Буклетів та\nбаз"
		},
		{
			title: "160 000",
			content: "Унікальних\nпитань"
		}
	],
	infographics: [
		{
			title: "Найбільша бібліотека тестів",
			content: "Найповніша база тестів. Починайте навчання одразу, без потреби шукати необхідне"
		},
		{
			title: "Доступ офлайн",
			content: "Швидке і зручне завантаження тестів до офлайну. Усі потрібні тести доступні будь-коли"
		},
		{
			title: "Збереження питань",
			content: "Жодних скріншотів. Зберігайте складні або незрозумілі питання прямо у застосунку"
		},
		{
			title: "Зручний інтерфейс",
			content: "Нічого зайвого. Ви бачите лише тести з власної спеціалізації. Режими день/ніч допоможуть очам не перевтомлюватись"
		},
		{
			title: "Контроль прогресу",
			content: "Відслідковуйте рівень власних знань. Вибудовуйте таку стратегію навчання, як вам зручно"
		}
	]
};
var features = {
	title: "Особливості роботи. Як працює застосунок для КРОК Medlibra?",
	content: [
		"Перш за все, повноцінно використовуючи застосунок, ви зможете максимально наблизити себе до умов проходження іспиту КРОК.\n\nПо-друге, застосунок допоможе вам максимально якісно підготуватись до тестових питань завдяки різним режимам тестування (іспит та тренування), що дає можливість перевірити себе в різних умовах та закріпити вивчений матеріал.\n\nПо-третє, продумані та зручні особливості додатку допоможуть у наступних ситуаціях:\n– Щоб відслідковувати свій успіх та розуміти, наскільки добре йде підготовка, створено різні типи статистик та історій проходження тестів.\n– Незрозуміле конкретне питання – не проблема, його можна зберегти та навчатись далі, щоб повернутись до нього згодом.",
		"– Знайти відповідь на складне питання не вдалося? Є можливість перевірити коментарі: інші користувачі можуть залишити посилання на літературу або поділись цим питанням з іншими одразу із застосунку.\n\n– Якщо є перебої з інтернетом – не проблема! Додаток Medlibra працює без підключення до інтернету і дозволяє без обмежень готуватись у зручний для себе час.\n\n– Інтуїтивно зрозуміла навігація дає змогу не витрачати зусиль на безглузде вивчення інструкцій.\nЗастосунок Medlibra створено для допомоги студентам у підготовці до тестування КРОК. Він працює з Android та iOS і дає змогу, незалежно від смартфону, однаково зручно навчитись проходити тестування, адже тут є буклети і бази з більш ніж 160 000 питань."
	],
	testBaseTitle: "База тестів Крок у Medlibra",
	testBaseContent: [
		"Яким чином допомогти студентам-медикам у навчанні? Про це подумала команда розробників застосунку Medlibra. Ними було створено зручну програму для підготовки до тестів КРОК 1, КРОК 2, КРОК 3, КРОК М, КРОК Б, що складається з численних буклетів та баз по всіх медичних спеціальностях.\n\nВикористовуючи для підготовки до тестування цей застосунок, ви з легкістю опануєте будь-які тести КРОК. Він поєднує у собі продумані та зручні функціональності разом з інтуїтивно зрозумілим використанням.\nНагадаємо, що ви маєте можливість зберігати питання у програмі для їх подальшого вивчення, а також ділитись незрозумілими питаннями тесту з друзями, слідкувати за прогресом підготовки, отримувати нагороди за досягнення, тощо. Але одними з найголовніших переваг Medlibra є відсутність необхідності постійного підключення до інтернету та найбільш повна база буклетів та баз КРОК.\n\nНаші майбутні лікарі мають право на зручне та комфортне навчання, незалежне від сторонніх факторів, та протягом усього перебування у стінах ЗВО.\n\nMedlibra покликана допомогти зручно підготуватись до іспиту з медичних спеціальностей за будь-якої ситуації завдяки зручному інтерфейсу, унікальним особливостям і найповнішій бібліотеці буклетів та баз КРОК.\nУвага! Розробники не несуть відповідальності за сумнівне використання застосунку, адже його розроблено винятково для допомоги у навчанні та підготовці до іспитів.",
		"В застосунку є наступні предмети та бази:\n\n1) КРОК 1\n– Стоматологія\n– Лікувальна справа\n– Фармація\n\n2) КРОК 2 містить у собі інформацію з предметів:\n– Стоматологія\n– Лікувальна справа\n– Медична психологія\n– Лабораторна діагностика\n– Фармація\n– Клінічна фармація\n– Косметологія\n\n3) КРОК 3 складається з предметів:\n– Стоматологія\n– Лабораторна діагностика\n– Лікувальна справа\n\n4) Готуйтесь до КРОК М, Б зі спеціальностей:\n– Акушерська справа\n– Лікувальна справа\n– Медична профілактика\n– Сестринська справа\n– Лабораторна діагностика"
	]
};
var contactUs = "Написати розробникам";
var copyright = "© Medlibra 2020. Усі права захищено";
var ua = {
	currentLanguage: currentLanguage,
	languages: languages,
	menu: menu,
	download: download,
	advantages: advantages,
	features: features,
	contactUs: contactUs,
	copyright: copyright
};

const global = globalThis || window || global;

const KEY = 'currentLanguage';
const cache = { ua };

async function setLocale(locale) {
  const nextLocale =
    cache[locale] || (await (await fetch(`/locales/${locale}.json`)).json());
  localization.set(nextLocale);
  cache[locale] = nextLocale;
  global.localStorage && global.localStorage.setItem(KEY, locale);
}

if (!!global.localStorage) {
  const initialLanguage = global.localStorage.getItem(KEY);

  if (initialLanguage !== 'ua' && initialLanguage !== null) {
    setLocale(initialLanguage);
  }
}

const localization = writable(ua);

/* src/components/Header.svelte generated by Svelte v3.21.0 */
const file$1 = "src/components/Header.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

function get_each_context_1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[7] = list[i];
	return child_ctx;
}

// (201:10) {#each $localization.languages as language}
function create_each_block_1(ctx) {
	let div;
	let t0_value = /*language*/ ctx[7].name + "";
	let t0;
	let t1;
	let dispose;

	function mousedown_handler(...args) {
		return /*mousedown_handler*/ ctx[3](/*language*/ ctx[7], ...args);
	}

	const block = {
		c: function create() {
			div = element("div");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t0 = claim_text(div_nodes, t0_value);
			t1 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "svelte-pp14cf");
			add_location(div, file$1, 201, 12, 3598);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div, anchor);
			append_dev(div, t0);
			append_dev(div, t1);
			if (remount) dispose();
			dispose = listen_dev(div, "mousedown", mousedown_handler, false, false, false);
		},
		p: function update(new_ctx, dirty) {
			ctx = new_ctx;
			if (dirty & /*$localization*/ 4 && t0_value !== (t0_value = /*language*/ ctx[7].name + "")) set_data_dev(t0, t0_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1.name,
		type: "each",
		source: "(201:10) {#each $localization.languages as language}",
		ctx
	});

	return block;
}

// (211:6) {#each menuItems as item}
function create_each_block(ctx) {
	let a;
	let t0_value = /*item*/ ctx[4].title + "";
	let t0;
	let t1;
	let a_href_value;

	const block = {
		c: function create() {
			a = element("a");
			t0 = text(t0_value);
			t1 = space();
			this.h();
		},
		l: function claim(nodes) {
			a = claim_element(nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			t0 = claim_text(a_nodes, t0_value);
			t1 = claim_space(a_nodes);
			a_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(a, "class", "text-inactive svelte-pp14cf");
			attr_dev(a, "href", a_href_value = /*item*/ ctx[4].link);
			toggle_class(a, "active", /*item*/ ctx[4].link === `#${/*currentObservedItem*/ ctx[0]}`);
			add_location(a, file$1, 211, 8, 3827);
		},
		m: function mount(target, anchor) {
			insert_dev(target, a, anchor);
			append_dev(a, t0);
			append_dev(a, t1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*menuItems*/ 2 && t0_value !== (t0_value = /*item*/ ctx[4].title + "")) set_data_dev(t0, t0_value);

			if (dirty & /*menuItems*/ 2 && a_href_value !== (a_href_value = /*item*/ ctx[4].link)) {
				attr_dev(a, "href", a_href_value);
			}

			if (dirty & /*menuItems, currentObservedItem*/ 3) {
				toggle_class(a, "active", /*item*/ ctx[4].link === `#${/*currentObservedItem*/ ctx[0]}`);
			}
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(a);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block.name,
		type: "each",
		source: "(211:6) {#each menuItems as item}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let header;
	let div5;
	let div3;
	let a;
	let img;
	let img_src_value;
	let t0;
	let div2;
	let div0;
	let t1;
	let span;
	let t2_value = /*$localization*/ ctx[2].currentLanguage + "";
	let t2;
	let t3;
	let t4;
	let div1;
	let t5;
	let div4;
	let current;
	const arrow = new Arrow({ $$inline: true });
	let each_value_1 = /*$localization*/ ctx[2].languages;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
	}

	let each_value = /*menuItems*/ ctx[1];
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			header = element("header");
			div5 = element("div");
			div3 = element("div");
			a = element("a");
			img = element("img");
			t0 = space();
			div2 = element("div");
			div0 = element("div");
			t1 = space();
			span = element("span");
			t2 = text(t2_value);
			t3 = space();
			create_component(arrow.$$.fragment);
			t4 = space();
			div1 = element("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t5 = space();
			div4 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			header = claim_element(nodes, "HEADER", { class: true });
			var header_nodes = children(header);
			div5 = claim_element(header_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div3 = claim_element(div5_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			a = claim_element(div3_nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			img = claim_element(a_nodes, "IMG", { class: true, src: true, alt: true });
			a_nodes.forEach(detach_dev);
			t0 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true, href: true, tabindex: true });
			var div2_nodes = children(div2);
			div0 = claim_element(div2_nodes, "DIV", { class: true, tabindex: true });
			children(div0).forEach(detach_dev);
			t1 = claim_space(div2_nodes);
			span = claim_element(div2_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t2 = claim_text(span_nodes, t2_value);
			span_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			claim_component(arrow.$$.fragment, div2_nodes);
			t4 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true, tabindex: true });
			var div1_nodes = children(div1);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div1_nodes);
			}

			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div4_nodes);
			}

			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			header_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img, "class", "logo svelte-pp14cf");
			if (img.src !== (img_src_value = "/images/Logo.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "medlibra");
			add_location(img, file$1, 192, 8, 3219);
			attr_dev(a, "class", "home svelte-pp14cf");
			attr_dev(a, "href", "/");
			add_location(a, file$1, 191, 6, 3185);
			attr_dev(div0, "class", "language-overlay svelte-pp14cf");
			attr_dev(div0, "tabindex", "0");
			add_location(div0, file$1, 196, 8, 3364);
			attr_dev(span, "class", "svelte-pp14cf");
			add_location(span, file$1, 197, 8, 3418);
			attr_dev(div1, "class", "language-select svelte-pp14cf");
			attr_dev(div1, "tabindex", "0");
			add_location(div1, file$1, 199, 8, 3489);
			attr_dev(div2, "class", "language text-secondary svelte-pp14cf");
			attr_dev(div2, "href", "/");
			attr_dev(div2, "tabindex", "0");
			add_location(div2, file$1, 195, 6, 3296);
			attr_dev(div3, "class", "segment main svelte-pp14cf");
			add_location(div3, file$1, 190, 4, 3152);
			attr_dev(div4, "class", "segment menu svelte-pp14cf");
			add_location(div4, file$1, 209, 4, 3760);
			attr_dev(div5, "class", "container svelte-pp14cf");
			add_location(div5, file$1, 189, 2, 3124);
			attr_dev(header, "class", "svelte-pp14cf");
			add_location(header, file$1, 188, 0, 3113);
		},
		m: function mount(target, anchor) {
			insert_dev(target, header, anchor);
			append_dev(header, div5);
			append_dev(div5, div3);
			append_dev(div3, a);
			append_dev(a, img);
			append_dev(div3, t0);
			append_dev(div3, div2);
			append_dev(div2, div0);
			append_dev(div2, t1);
			append_dev(div2, span);
			append_dev(span, t2);
			append_dev(div2, t3);
			mount_component(arrow, div2, null);
			append_dev(div2, t4);
			append_dev(div2, div1);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div1, null);
			}

			append_dev(div5, t5);
			append_dev(div5, div4);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div4, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*$localization*/ 4) && t2_value !== (t2_value = /*$localization*/ ctx[2].currentLanguage + "")) set_data_dev(t2, t2_value);

			if (dirty & /*setLocale, $localization*/ 4) {
				each_value_1 = /*$localization*/ ctx[2].languages;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div1, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*menuItems, currentObservedItem*/ 3) {
				each_value = /*menuItems*/ ctx[1];
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div4, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(arrow.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(arrow.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(header);
			destroy_component(arrow);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let $localization;
	validate_store(localization, "localization");
	component_subscribe($$self, localization, $$value => $$invalidate(2, $localization = $$value));
	let { currentObservedItem } = $$props;
	const writable_props = ["currentObservedItem"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Header> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Header", $$slots, []);
	const mousedown_handler = language => setLocale(language.key);

	$$self.$set = $$props => {
		if ("currentObservedItem" in $$props) $$invalidate(0, currentObservedItem = $$props.currentObservedItem);
	};

	$$self.$capture_state = () => ({
		Arrow,
		setLocale,
		localization,
		currentObservedItem,
		menuItems,
		$localization
	});

	$$self.$inject_state = $$props => {
		if ("currentObservedItem" in $$props) $$invalidate(0, currentObservedItem = $$props.currentObservedItem);
		if ("menuItems" in $$props) $$invalidate(1, menuItems = $$props.menuItems);
	};

	let menuItems;

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*$localization*/ 4) {
			 $$invalidate(1, menuItems = [
				{
					link: "#download",
					title: $localization.menu.download
				},
				{
					link: "#advantages",
					title: $localization.menu.advantages
				},
				{
					link: "#features",
					title: $localization.menu.features
				},
				{
					link: "#contact",
					title: $localization.menu.contact
				}
			]);
		}
	};

	return [currentObservedItem, menuItems, $localization, mousedown_handler];
}

class Header extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { currentObservedItem: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Header",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*currentObservedItem*/ ctx[0] === undefined && !("currentObservedItem" in props)) {
			console.warn("<Header> was created without expected prop 'currentObservedItem'");
		}
	}

	get currentObservedItem() {
		throw new Error("<Header>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set currentObservedItem(value) {
		throw new Error("<Header>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Background.svelte generated by Svelte v3.21.0 */
const file$2 = "src/components/Background.svelte";

function create_fragment$2(ctx) {
	let div;
	let img0;
	let img0_src_value;
	let t;
	let img1;
	let img1_src_value;

	const block = {
		c: function create() {
			div = element("div");
			img0 = element("img");
			t = space();
			img1 = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			img0 = claim_element(div_nodes, "IMG", { class: true, src: true, alt: true });
			t = claim_space(div_nodes);
			img1 = claim_element(div_nodes, "IMG", { class: true, src: true, alt: true });
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(img0, "class", "light svelte-1ga20bz");
			if (img0.src !== (img0_src_value = "/images/light.png")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "light");
			add_location(img0, file$2, 92, 2, 1263);
			attr_dev(img1, "class", "dark svelte-1ga20bz");
			if (img1.src !== (img1_src_value = "/images/dark.png")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "dark");
			add_location(img1, file$2, 93, 2, 1323);
			attr_dev(div, "class", "background svelte-1ga20bz");
			toggle_class(div, "mounted", /*mounted*/ ctx[0]);
			add_location(div, file$2, 91, 0, 1222);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, img0);
			append_dev(div, t);
			append_dev(div, img1);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*mounted*/ 1) {
				toggle_class(div, "mounted", /*mounted*/ ctx[0]);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let mounted = false;

	onMount(() => {
		setTimeout(
			() => {
				$$invalidate(0, mounted = true);
			},
			200
		);
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Background> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Background", $$slots, []);
	$$self.$capture_state = () => ({ onMount, mounted });

	$$self.$inject_state = $$props => {
		if ("mounted" in $$props) $$invalidate(0, mounted = $$props.mounted);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [mounted];
}

class Background extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Background",
			options,
			id: create_fragment$2.name
		});
	}
}

/* src/components/Download.svelte generated by Svelte v3.21.0 */
const file$3 = "src/components/Download.svelte";

function create_fragment$3(ctx) {
	let div7;
	let h1;
	let t0_value = /*$localization*/ ctx[0].download.title + "";
	let t0;
	let t1;
	let br0;
	let t2;
	let br1;
	let t3;
	let t4_value = /*$localization*/ ctx[0].download.titleDescription + "";
	let t4;
	let t5;
	let h3;
	let t6_value = /*$localization*/ ctx[0].download.downloadFree + "";
	let t6;
	let t7;
	let div6;
	let a0;
	let div0;
	let svg0;
	let defs0;
	let linearGradient0;
	let stop0;
	let stop1;
	let rect0;
	let t8;
	let div2;
	let img0;
	let img0_src_value;
	let t9;
	let div1;
	let span0;
	let t10;
	let t11;
	let a1;
	let div3;
	let svg1;
	let defs1;
	let linearGradient1;
	let stop2;
	let stop3;
	let stop4;
	let stop5;
	let rect1;
	let t12;
	let div5;
	let img1;
	let img1_src_value;
	let t13;
	let div4;
	let span1;
	let t14;

	const block = {
		c: function create() {
			div7 = element("div");
			h1 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			br0 = element("br");
			t2 = space();
			br1 = element("br");
			t3 = space();
			t4 = text(t4_value);
			t5 = space();
			h3 = element("h3");
			t6 = text(t6_value);
			t7 = space();
			div6 = element("div");
			a0 = element("a");
			div0 = element("div");
			svg0 = svg_element("svg");
			defs0 = svg_element("defs");
			linearGradient0 = svg_element("linearGradient");
			stop0 = svg_element("stop");
			stop1 = svg_element("stop");
			rect0 = svg_element("rect");
			t8 = space();
			div2 = element("div");
			img0 = element("img");
			t9 = space();
			div1 = element("div");
			span0 = element("span");
			t10 = text("AppStore");
			t11 = space();
			a1 = element("a");
			div3 = element("div");
			svg1 = svg_element("svg");
			defs1 = svg_element("defs");
			linearGradient1 = svg_element("linearGradient");
			stop2 = svg_element("stop");
			stop3 = svg_element("stop");
			stop4 = svg_element("stop");
			stop5 = svg_element("stop");
			rect1 = svg_element("rect");
			t12 = space();
			div5 = element("div");
			img1 = element("img");
			t13 = space();
			div4 = element("div");
			span1 = element("span");
			t14 = text("PlayMarket");
			this.h();
		},
		l: function claim(nodes) {
			div7 = claim_element(nodes, "DIV", { class: true, id: true });
			var div7_nodes = children(div7);
			h1 = claim_element(div7_nodes, "H1", { class: true });
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, t0_value);
			t1 = claim_space(h1_nodes);
			br0 = claim_element(h1_nodes, "BR", {});
			t2 = claim_space(h1_nodes);
			br1 = claim_element(h1_nodes, "BR", {});
			t3 = claim_space(h1_nodes);
			t4 = claim_text(h1_nodes, t4_value);
			h1_nodes.forEach(detach_dev);
			t5 = claim_space(div7_nodes);
			h3 = claim_element(div7_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t6 = claim_text(h3_nodes, t6_value);
			h3_nodes.forEach(detach_dev);
			t7 = claim_space(div7_nodes);
			div6 = claim_element(div7_nodes, "DIV", { class: true });
			var div6_nodes = children(div6);
			a0 = claim_element(div6_nodes, "A", { href: true, class: true });
			var a0_nodes = children(a0);
			div0 = claim_element(a0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			svg0 = claim_element(div0_nodes, "svg", { width: true, height: true, class: true }, 1);
			var svg0_nodes = children(svg0);
			defs0 = claim_element(svg0_nodes, "defs", {}, 1);
			var defs0_nodes = children(defs0);

			linearGradient0 = claim_element(
				defs0_nodes,
				"linearGradient",
				{
					id: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			var linearGradient0_nodes = children(linearGradient0);
			stop0 = claim_element(linearGradient0_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop0).forEach(detach_dev);
			stop1 = claim_element(linearGradient0_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop1).forEach(detach_dev);
			linearGradient0_nodes.forEach(detach_dev);
			defs0_nodes.forEach(detach_dev);

			rect0 = claim_element(
				svg0_nodes,
				"rect",
				{
					x: true,
					y: true,
					rx: true,
					ry: true,
					width: true,
					fill: true,
					height: true,
					stroke: true,
					"stroke-width": true
				},
				1
			);

			children(rect0).forEach(detach_dev);
			svg0_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t8 = claim_space(a0_nodes);
			div2 = claim_element(a0_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img0 = claim_element(div2_nodes, "IMG", { src: true, alt: true, class: true });
			t9 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			span0 = claim_element(div1_nodes, "SPAN", { class: true });
			var span0_nodes = children(span0);
			t10 = claim_text(span0_nodes, "AppStore");
			span0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			a0_nodes.forEach(detach_dev);
			t11 = claim_space(div6_nodes);
			a1 = claim_element(div6_nodes, "A", { href: true, class: true });
			var a1_nodes = children(a1);
			div3 = claim_element(a1_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			svg1 = claim_element(div3_nodes, "svg", { width: true, height: true, class: true }, 1);
			var svg1_nodes = children(svg1);
			defs1 = claim_element(svg1_nodes, "defs", {}, 1);
			var defs1_nodes = children(defs1);

			linearGradient1 = claim_element(
				defs1_nodes,
				"linearGradient",
				{
					id: true,
					x1: true,
					y1: true,
					x2: true,
					y2: true
				},
				1
			);

			var linearGradient1_nodes = children(linearGradient1);
			stop2 = claim_element(linearGradient1_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop2).forEach(detach_dev);
			stop3 = claim_element(linearGradient1_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop3).forEach(detach_dev);
			stop4 = claim_element(linearGradient1_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop4).forEach(detach_dev);
			stop5 = claim_element(linearGradient1_nodes, "stop", { offset: true, "stop-color": true }, 1);
			children(stop5).forEach(detach_dev);
			linearGradient1_nodes.forEach(detach_dev);
			defs1_nodes.forEach(detach_dev);

			rect1 = claim_element(
				svg1_nodes,
				"rect",
				{
					x: true,
					y: true,
					rx: true,
					ry: true,
					width: true,
					fill: true,
					height: true,
					stroke: true,
					"stroke-width": true
				},
				1
			);

			children(rect1).forEach(detach_dev);
			svg1_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t12 = claim_space(a1_nodes);
			div5 = claim_element(a1_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			img1 = claim_element(div5_nodes, "IMG", { src: true, alt: true, class: true });
			t13 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			span1 = claim_element(div4_nodes, "SPAN", { class: true });
			var span1_nodes = children(span1);
			t14 = claim_text(span1_nodes, "PlayMarket");
			span1_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			div6_nodes.forEach(detach_dev);
			div7_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			add_location(br0, file$3, 140, 4, 2208);
			add_location(br1, file$3, 141, 4, 2219);
			attr_dev(h1, "class", "text-primary svelte-8a2ssr");
			add_location(h1, file$3, 138, 2, 2143);
			attr_dev(h3, "class", "text-secondary svelte-8a2ssr");
			add_location(h3, file$3, 145, 2, 2283);
			attr_dev(stop0, "offset", "0%");
			attr_dev(stop0, "stop-color", "#1AC6FB");
			add_location(stop0, file$3, 158, 14, 2659);
			attr_dev(stop1, "offset", "100%");
			attr_dev(stop1, "stop-color", "#1C72F0");
			add_location(stop1, file$3, 159, 14, 2715);
			attr_dev(linearGradient0, "id", "gradient-appstore");
			attr_dev(linearGradient0, "x1", "0%");
			attr_dev(linearGradient0, "y1", "0%");
			attr_dev(linearGradient0, "x2", "100%");
			attr_dev(linearGradient0, "y2", "0%");
			add_location(linearGradient0, file$3, 152, 12, 2501);
			add_location(defs0, file$3, 151, 10, 2482);
			attr_dev(rect0, "x", "1");
			attr_dev(rect0, "y", "1");
			attr_dev(rect0, "rx", "16");
			attr_dev(rect0, "ry", "16");
			attr_dev(rect0, "width", "calc(100% - 2px)");
			attr_dev(rect0, "fill", "rgba(254, 251, 246, 0.05)");
			attr_dev(rect0, "height", "calc(100% - 2px)");
			attr_dev(rect0, "stroke", "url(#gradient-appstore)");
			attr_dev(rect0, "stroke-width", "2");
			add_location(rect0, file$3, 162, 10, 2817);
			attr_dev(svg0, "width", "100%");
			attr_dev(svg0, "height", "100%");
			attr_dev(svg0, "class", "svelte-8a2ssr");
			add_location(svg0, file$3, 150, 8, 2439);
			attr_dev(div0, "class", "border svelte-8a2ssr");
			add_location(div0, file$3, 149, 6, 2410);
			if (img0.src !== (img0_src_value = "/images/appstore.svg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "alt", "app store");
			attr_dev(img0, "class", "svelte-8a2ssr");
			add_location(img0, file$3, 176, 8, 3161);
			attr_dev(span0, "class", "text-accent text-primary svelte-8a2ssr");
			add_location(span0, file$3, 178, 10, 3257);
			attr_dev(div1, "class", "text-content svelte-8a2ssr");
			add_location(div1, file$3, 177, 8, 3220);
			attr_dev(div2, "class", "content svelte-8a2ssr");
			add_location(div2, file$3, 175, 6, 3131);
			attr_dev(a0, "href", "/");
			attr_dev(a0, "class", "svelte-8a2ssr");
			add_location(a0, file$3, 148, 4, 2391);
			attr_dev(stop2, "offset", "0%");
			attr_dev(stop2, "stop-color", "#00E0FF");
			add_location(stop2, file$3, 193, 14, 3624);
			attr_dev(stop3, "offset", "33%");
			attr_dev(stop3, "stop-color", "#00F085");
			add_location(stop3, file$3, 194, 14, 3680);
			attr_dev(stop4, "offset", "66%");
			attr_dev(stop4, "stop-color", "#FFE300");
			add_location(stop4, file$3, 195, 14, 3737);
			attr_dev(stop5, "offset", "100%");
			attr_dev(stop5, "stop-color", "#FF4E54");
			add_location(stop5, file$3, 196, 14, 3794);
			attr_dev(linearGradient1, "id", "gradient-playmarket");
			attr_dev(linearGradient1, "x1", "0%");
			attr_dev(linearGradient1, "y1", "0%");
			attr_dev(linearGradient1, "x2", "100%");
			attr_dev(linearGradient1, "y2", "0%");
			add_location(linearGradient1, file$3, 187, 12, 3464);
			add_location(defs1, file$3, 186, 10, 3445);
			attr_dev(rect1, "x", "1");
			attr_dev(rect1, "y", "1");
			attr_dev(rect1, "rx", "16");
			attr_dev(rect1, "ry", "16");
			attr_dev(rect1, "width", "calc(100% - 2px)");
			attr_dev(rect1, "fill", "rgba(254, 251, 246, 0.05)");
			attr_dev(rect1, "height", "calc(100% - 2px)");
			attr_dev(rect1, "stroke", "url(#gradient-playmarket)");
			attr_dev(rect1, "stroke-width", "2");
			add_location(rect1, file$3, 199, 10, 3896);
			attr_dev(svg1, "width", "100%");
			attr_dev(svg1, "height", "100%");
			attr_dev(svg1, "class", "svelte-8a2ssr");
			add_location(svg1, file$3, 185, 8, 3402);
			attr_dev(div3, "class", "border svelte-8a2ssr");
			add_location(div3, file$3, 184, 6, 3373);
			if (img1.src !== (img1_src_value = "/images/playstore.svg")) attr_dev(img1, "src", img1_src_value);
			attr_dev(img1, "alt", "play market");
			attr_dev(img1, "class", "svelte-8a2ssr");
			add_location(img1, file$3, 213, 8, 4242);
			attr_dev(span1, "class", "text-accent text-primary svelte-8a2ssr");
			add_location(span1, file$3, 215, 10, 4341);
			attr_dev(div4, "class", "text-content svelte-8a2ssr");
			add_location(div4, file$3, 214, 8, 4304);
			attr_dev(div5, "class", "content svelte-8a2ssr");
			add_location(div5, file$3, 212, 6, 4212);
			attr_dev(a1, "href", "/");
			attr_dev(a1, "class", "svelte-8a2ssr");
			add_location(a1, file$3, 183, 4, 3354);
			attr_dev(div6, "class", "download-buttons svelte-8a2ssr");
			add_location(div6, file$3, 147, 2, 2356);
			attr_dev(div7, "class", "path container svelte-8a2ssr");
			attr_dev(div7, "id", "download");
			add_location(div7, file$3, 137, 0, 2098);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div7, anchor);
			append_dev(div7, h1);
			append_dev(h1, t0);
			append_dev(h1, t1);
			append_dev(h1, br0);
			append_dev(h1, t2);
			append_dev(h1, br1);
			append_dev(h1, t3);
			append_dev(h1, t4);
			append_dev(div7, t5);
			append_dev(div7, h3);
			append_dev(h3, t6);
			append_dev(div7, t7);
			append_dev(div7, div6);
			append_dev(div6, a0);
			append_dev(a0, div0);
			append_dev(div0, svg0);
			append_dev(svg0, defs0);
			append_dev(defs0, linearGradient0);
			append_dev(linearGradient0, stop0);
			append_dev(linearGradient0, stop1);
			append_dev(svg0, rect0);
			append_dev(a0, t8);
			append_dev(a0, div2);
			append_dev(div2, img0);
			append_dev(div2, t9);
			append_dev(div2, div1);
			append_dev(div1, span0);
			append_dev(span0, t10);
			append_dev(div6, t11);
			append_dev(div6, a1);
			append_dev(a1, div3);
			append_dev(div3, svg1);
			append_dev(svg1, defs1);
			append_dev(defs1, linearGradient1);
			append_dev(linearGradient1, stop2);
			append_dev(linearGradient1, stop3);
			append_dev(linearGradient1, stop4);
			append_dev(linearGradient1, stop5);
			append_dev(svg1, rect1);
			append_dev(a1, t12);
			append_dev(a1, div5);
			append_dev(div5, img1);
			append_dev(div5, t13);
			append_dev(div5, div4);
			append_dev(div4, span1);
			append_dev(span1, t14);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$localization*/ 1 && t0_value !== (t0_value = /*$localization*/ ctx[0].download.title + "")) set_data_dev(t0, t0_value);
			if (dirty & /*$localization*/ 1 && t4_value !== (t4_value = /*$localization*/ ctx[0].download.titleDescription + "")) set_data_dev(t4, t4_value);
			if (dirty & /*$localization*/ 1 && t6_value !== (t6_value = /*$localization*/ ctx[0].download.downloadFree + "")) set_data_dev(t6, t6_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div7);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let $localization;
	validate_store(localization, "localization");
	component_subscribe($$self, localization, $$value => $$invalidate(0, $localization = $$value));
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Download> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Download", $$slots, []);
	$$self.$capture_state = () => ({ localization, $localization });
	return [$localization];
}

class Download extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Download",
			options,
			id: create_fragment$3.name
		});
	}
}

/* src/components/Advantages.svelte generated by Svelte v3.21.0 */
const file$4 = "src/components/Advantages.svelte";

function get_each_context$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[1] = list[i];
	child_ctx[3] = i;
	return child_ctx;
}

function get_each_context_1$1(ctx, list, i) {
	const child_ctx = ctx.slice();
	child_ctx[4] = list[i];
	return child_ctx;
}

// (265:6) {#each $localization.advantages.overview as overview}
function create_each_block_1$1(ctx) {
	let div;
	let h2;
	let t0_value = /*overview*/ ctx[4].title + "";
	let t0;
	let t1;
	let h3;
	let t2_value = /*overview*/ ctx[4].content + "";
	let t2;
	let t3;

	const block = {
		c: function create() {
			div = element("div");
			h2 = element("h2");
			t0 = text(t0_value);
			t1 = space();
			h3 = element("h3");
			t2 = text(t2_value);
			t3 = space();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			h2 = claim_element(div_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t0 = claim_text(h2_nodes, t0_value);
			h2_nodes.forEach(detach_dev);
			t1 = claim_space(div_nodes);
			h3 = claim_element(div_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, t2_value);
			h3_nodes.forEach(detach_dev);
			t3 = claim_space(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h2, "class", "text-primary svelte-15otg7s");
			add_location(h2, file$4, 266, 10, 4667);
			attr_dev(h3, "class", "text-secondary svelte-15otg7s");
			add_location(h3, file$4, 267, 10, 4724);
			attr_dev(div, "class", "item svelte-15otg7s");
			add_location(div, file$4, 265, 8, 4638);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h2);
			append_dev(h2, t0);
			append_dev(div, t1);
			append_dev(div, h3);
			append_dev(h3, t2);
			append_dev(div, t3);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*$localization*/ 1 && t0_value !== (t0_value = /*overview*/ ctx[4].title + "")) set_data_dev(t0, t0_value);
			if (dirty & /*$localization*/ 1 && t2_value !== (t2_value = /*overview*/ ctx[4].content + "")) set_data_dev(t2, t2_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block_1$1.name,
		type: "each",
		source: "(265:6) {#each $localization.advantages.overview as overview}",
		ctx
	});

	return block;
}

// (275:4) {#each $localization.advantages.infographics as infographics, index}
function create_each_block$1(ctx) {
	let div1;
	let img;
	let img_src_value;
	let appear_action;
	let t0;
	let div0;
	let h2;
	let t1_value = /*infographics*/ ctx[1].title + "";
	let t1;
	let t2;
	let h3;
	let t3_value = /*infographics*/ ctx[1].content + "";
	let t3;
	let t4;
	let dispose;

	const block = {
		c: function create() {
			div1 = element("div");
			img = element("img");
			t0 = space();
			div0 = element("div");
			h2 = element("h2");
			t1 = text(t1_value);
			t2 = space();
			h3 = element("h3");
			t3 = text(t3_value);
			t4 = space();
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			img = claim_element(div1_nodes, "IMG", { src: true, alt: true, class: true });
			t0 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t1 = claim_text(h2_nodes, t1_value);
			h2_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			h3 = claim_element(div0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t3 = claim_text(h3_nodes, t3_value);
			h3_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "/images/illustration" + (/*index*/ ctx[3] + 1) + ".svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "img");
			attr_dev(img, "class", "svelte-15otg7s");
			add_location(img, file$4, 276, 8, 4965);
			attr_dev(h2, "class", "text-primary svelte-15otg7s");
			add_location(h2, file$4, 279, 10, 5061);
			attr_dev(h3, "class", "text-secondary svelte-15otg7s");
			add_location(h3, file$4, 280, 10, 5122);
			attr_dev(div0, "class", "svelte-15otg7s");
			add_location(div0, file$4, 278, 8, 5045);
			attr_dev(div1, "class", "infographics svelte-15otg7s");
			add_location(div1, file$4, 275, 6, 4930);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div1, anchor);
			append_dev(div1, img);
			append_dev(div1, t0);
			append_dev(div1, div0);
			append_dev(div0, h2);
			append_dev(h2, t1);
			append_dev(div0, t2);
			append_dev(div0, h3);
			append_dev(h3, t3);
			append_dev(div1, t4);
			if (remount) dispose();
			dispose = action_destroyer(appear_action = appear.call(null, img));
		},
		p: function update(ctx, dirty) {
			if (dirty & /*$localization*/ 1 && t1_value !== (t1_value = /*infographics*/ ctx[1].title + "")) set_data_dev(t1, t1_value);
			if (dirty & /*$localization*/ 1 && t3_value !== (t3_value = /*infographics*/ ctx[1].content + "")) set_data_dev(t3, t3_value);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_each_block$1.name,
		type: "each",
		source: "(275:4) {#each $localization.advantages.infographics as infographics, index}",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let div3;
	let div1;
	let div0;
	let t;
	let div2;
	let each_value_1 = /*$localization*/ ctx[0].advantages.overview;
	validate_each_argument(each_value_1);
	let each_blocks_1 = [];

	for (let i = 0; i < each_value_1.length; i += 1) {
		each_blocks_1[i] = create_each_block_1$1(get_each_context_1$1(ctx, each_value_1, i));
	}

	let each_value = /*$localization*/ ctx[0].advantages.infographics;
	validate_each_argument(each_value);
	let each_blocks = [];

	for (let i = 0; i < each_value.length; i += 1) {
		each_blocks[i] = create_each_block$1(get_each_context$1(ctx, each_value, i));
	}

	const block = {
		c: function create() {
			div3 = element("div");
			div1 = element("div");
			div0 = element("div");

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].c();
			}

			t = space();
			div2 = element("div");

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].c();
			}

			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { class: true, id: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].l(div0_nodes);
			}

			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].l(div2_nodes);
			}

			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "class", "container overview svelte-15otg7s");
			add_location(div0, file$4, 263, 4, 4537);
			attr_dev(div1, "class", "overview-wrapper svelte-15otg7s");
			add_location(div1, file$4, 262, 2, 4502);
			attr_dev(div2, "class", "container");
			add_location(div2, file$4, 273, 2, 4827);
			attr_dev(div3, "class", "path svelte-15otg7s");
			attr_dev(div3, "id", "advantages");
			add_location(div3, file$4, 261, 0, 4465);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div1);
			append_dev(div1, div0);

			for (let i = 0; i < each_blocks_1.length; i += 1) {
				each_blocks_1[i].m(div0, null);
			}

			append_dev(div3, t);
			append_dev(div3, div2);

			for (let i = 0; i < each_blocks.length; i += 1) {
				each_blocks[i].m(div2, null);
			}
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$localization*/ 1) {
				each_value_1 = /*$localization*/ ctx[0].advantages.overview;
				validate_each_argument(each_value_1);
				let i;

				for (i = 0; i < each_value_1.length; i += 1) {
					const child_ctx = get_each_context_1$1(ctx, each_value_1, i);

					if (each_blocks_1[i]) {
						each_blocks_1[i].p(child_ctx, dirty);
					} else {
						each_blocks_1[i] = create_each_block_1$1(child_ctx);
						each_blocks_1[i].c();
						each_blocks_1[i].m(div0, null);
					}
				}

				for (; i < each_blocks_1.length; i += 1) {
					each_blocks_1[i].d(1);
				}

				each_blocks_1.length = each_value_1.length;
			}

			if (dirty & /*$localization*/ 1) {
				each_value = /*$localization*/ ctx[0].advantages.infographics;
				validate_each_argument(each_value);
				let i;

				for (i = 0; i < each_value.length; i += 1) {
					const child_ctx = get_each_context$1(ctx, each_value, i);

					if (each_blocks[i]) {
						each_blocks[i].p(child_ctx, dirty);
					} else {
						each_blocks[i] = create_each_block$1(child_ctx);
						each_blocks[i].c();
						each_blocks[i].m(div2, null);
					}
				}

				for (; i < each_blocks.length; i += 1) {
					each_blocks[i].d(1);
				}

				each_blocks.length = each_value.length;
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
			destroy_each(each_blocks_1, detaching);
			destroy_each(each_blocks, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function appear(node) {
	const io = new IntersectionObserver(([entry]) => {
			if (!entry.isIntersecting) return;
			node.classList.add("appear");
			io.unobserve(node);
		},
	{ threshold: 0.2 });

	io.observe(node);
}

function instance$4($$self, $$props, $$invalidate) {
	let $localization;
	validate_store(localization, "localization");
	component_subscribe($$self, localization, $$value => $$invalidate(0, $localization = $$value));
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Advantages> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Advantages", $$slots, []);
	$$self.$capture_state = () => ({ localization, appear, $localization });
	return [$localization];
}

class Advantages extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Advantages",
			options,
			id: create_fragment$4.name
		});
	}
}

/* src/components/Features.svelte generated by Svelte v3.21.0 */
const file$5 = "src/components/Features.svelte";

function create_fragment$5(ctx) {
	let div4;
	let h10;
	let t0_value = /*$localization*/ ctx[0].features.title + "";
	let t0;
	let t1;
	let div1;
	let p0;
	let t2_value = /*$localization*/ ctx[0].features.content[0] + "";
	let t2;
	let t3;
	let div0;
	let t4;
	let p1;
	let t5_value = /*$localization*/ ctx[0].features.content[1] + "";
	let t5;
	let t6;
	let h11;
	let t7_value = /*$localization*/ ctx[0].features.testBaseTitle + "";
	let t7;
	let t8;
	let div3;
	let p2;
	let t9_value = /*$localization*/ ctx[0].features.testBaseContent[0] + "";
	let t9;
	let t10;
	let div2;
	let t11;
	let p3;
	let t12_value = /*$localization*/ ctx[0].features.testBaseContent[1] + "";
	let t12;

	const block = {
		c: function create() {
			div4 = element("div");
			h10 = element("h1");
			t0 = text(t0_value);
			t1 = space();
			div1 = element("div");
			p0 = element("p");
			t2 = text(t2_value);
			t3 = space();
			div0 = element("div");
			t4 = space();
			p1 = element("p");
			t5 = text(t5_value);
			t6 = space();
			h11 = element("h1");
			t7 = text(t7_value);
			t8 = space();
			div3 = element("div");
			p2 = element("p");
			t9 = text(t9_value);
			t10 = space();
			div2 = element("div");
			t11 = space();
			p3 = element("p");
			t12 = text(t12_value);
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { class: true, id: true });
			var div4_nodes = children(div4);
			h10 = claim_element(div4_nodes, "H1", { class: true });
			var h10_nodes = children(h10);
			t0 = claim_text(h10_nodes, t0_value);
			h10_nodes.forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div1 = claim_element(div4_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			p0 = claim_element(div1_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t2 = claim_text(p0_nodes, t2_value);
			p0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			children(div0).forEach(detach_dev);
			t4 = claim_space(div1_nodes);
			p1 = claim_element(div1_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t5 = claim_text(p1_nodes, t5_value);
			p1_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t6 = claim_space(div4_nodes);
			h11 = claim_element(div4_nodes, "H1", { class: true });
			var h11_nodes = children(h11);
			t7 = claim_text(h11_nodes, t7_value);
			h11_nodes.forEach(detach_dev);
			t8 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			p2 = claim_element(div3_nodes, "P", { class: true });
			var p2_nodes = children(p2);
			t9 = claim_text(p2_nodes, t9_value);
			p2_nodes.forEach(detach_dev);
			t10 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			children(div2).forEach(detach_dev);
			t11 = claim_space(div3_nodes);
			p3 = claim_element(div3_nodes, "P", { class: true });
			var p3_nodes = children(p3);
			t12 = claim_text(p3_nodes, t12_value);
			p3_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h10, "class", "text-primary svelte-1cvf5qm");
			add_location(h10, file$5, 59, 2, 873);
			attr_dev(p0, "class", "svelte-1cvf5qm");
			add_location(p0, file$5, 62, 4, 974);
			attr_dev(div0, "class", "split svelte-1cvf5qm");
			add_location(div0, file$5, 63, 4, 1021);
			attr_dev(p1, "class", "svelte-1cvf5qm");
			add_location(p1, file$5, 64, 4, 1047);
			attr_dev(div1, "class", "row text-secondary svelte-1cvf5qm");
			add_location(div1, file$5, 61, 2, 937);
			attr_dev(h11, "class", "text-primary svelte-1cvf5qm");
			add_location(h11, file$5, 67, 2, 1102);
			attr_dev(p2, "class", "svelte-1cvf5qm");
			add_location(p2, file$5, 70, 4, 1211);
			attr_dev(div2, "class", "split svelte-1cvf5qm");
			add_location(div2, file$5, 71, 4, 1266);
			attr_dev(p3, "class", "svelte-1cvf5qm");
			add_location(p3, file$5, 72, 4, 1292);
			attr_dev(div3, "class", "row text-secondary svelte-1cvf5qm");
			add_location(div3, file$5, 69, 2, 1174);
			attr_dev(div4, "class", "path container svelte-1cvf5qm");
			attr_dev(div4, "id", "features");
			add_location(div4, file$5, 58, 0, 828);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, h10);
			append_dev(h10, t0);
			append_dev(div4, t1);
			append_dev(div4, div1);
			append_dev(div1, p0);
			append_dev(p0, t2);
			append_dev(div1, t3);
			append_dev(div1, div0);
			append_dev(div1, t4);
			append_dev(div1, p1);
			append_dev(p1, t5);
			append_dev(div4, t6);
			append_dev(div4, h11);
			append_dev(h11, t7);
			append_dev(div4, t8);
			append_dev(div4, div3);
			append_dev(div3, p2);
			append_dev(p2, t9);
			append_dev(div3, t10);
			append_dev(div3, div2);
			append_dev(div3, t11);
			append_dev(div3, p3);
			append_dev(p3, t12);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$localization*/ 1 && t0_value !== (t0_value = /*$localization*/ ctx[0].features.title + "")) set_data_dev(t0, t0_value);
			if (dirty & /*$localization*/ 1 && t2_value !== (t2_value = /*$localization*/ ctx[0].features.content[0] + "")) set_data_dev(t2, t2_value);
			if (dirty & /*$localization*/ 1 && t5_value !== (t5_value = /*$localization*/ ctx[0].features.content[1] + "")) set_data_dev(t5, t5_value);
			if (dirty & /*$localization*/ 1 && t7_value !== (t7_value = /*$localization*/ ctx[0].features.testBaseTitle + "")) set_data_dev(t7, t7_value);
			if (dirty & /*$localization*/ 1 && t9_value !== (t9_value = /*$localization*/ ctx[0].features.testBaseContent[0] + "")) set_data_dev(t9, t9_value);
			if (dirty & /*$localization*/ 1 && t12_value !== (t12_value = /*$localization*/ ctx[0].features.testBaseContent[1] + "")) set_data_dev(t12, t12_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let $localization;
	validate_store(localization, "localization");
	component_subscribe($$self, localization, $$value => $$invalidate(0, $localization = $$value));
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Features> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Features", $$slots, []);
	$$self.$capture_state = () => ({ localization, $localization });
	return [$localization];
}

class Features extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Features",
			options,
			id: create_fragment$5.name
		});
	}
}

/* src/components/Footer.svelte generated by Svelte v3.21.0 */
const file$6 = "src/components/Footer.svelte";

function create_fragment$6(ctx) {
	let footer;
	let div0;
	let a;
	let span;
	let t0_value = /*$localization*/ ctx[0].contactUs + "";
	let t0;
	let t1;
	let img;
	let img_src_value;
	let t2;
	let div1;
	let t3_value = /*$localization*/ ctx[0].copyright + "";
	let t3;

	const block = {
		c: function create() {
			footer = element("footer");
			div0 = element("div");
			a = element("a");
			span = element("span");
			t0 = text(t0_value);
			t1 = space();
			img = element("img");
			t2 = space();
			div1 = element("div");
			t3 = text(t3_value);
			this.h();
		},
		l: function claim(nodes) {
			footer = claim_element(nodes, "FOOTER", { class: true, id: true });
			var footer_nodes = children(footer);
			div0 = claim_element(footer_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			a = claim_element(div0_nodes, "A", { class: true, href: true });
			var a_nodes = children(a);
			span = claim_element(a_nodes, "SPAN", { class: true });
			var span_nodes = children(span);
			t0 = claim_text(span_nodes, t0_value);
			span_nodes.forEach(detach_dev);
			t1 = claim_space(a_nodes);
			img = claim_element(a_nodes, "IMG", { src: true, alt: true, class: true });
			a_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(footer_nodes);
			div1 = claim_element(footer_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t3 = claim_text(div1_nodes, t3_value);
			div1_nodes.forEach(detach_dev);
			footer_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(span, "class", "text-primary svelte-b7caeg");
			add_location(span, file$6, 52, 6, 955);
			if (img.src !== (img_src_value = "/images/mail.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", "mail");
			attr_dev(img, "class", "svelte-b7caeg");
			add_location(img, file$6, 53, 6, 1021);
			attr_dev(a, "class", "contact svelte-b7caeg");
			attr_dev(a, "href", "mailto:medlibra@gmail.com");
			add_location(a, file$6, 51, 4, 896);
			attr_dev(div0, "class", "contact-container svelte-b7caeg");
			add_location(div0, file$6, 50, 2, 860);
			attr_dev(div1, "class", "copyright text-secondary svelte-b7caeg");
			add_location(div1, file$6, 56, 2, 1083);
			attr_dev(footer, "class", "path svelte-b7caeg");
			attr_dev(footer, "id", "contact");
			add_location(footer, file$6, 49, 0, 823);
		},
		m: function mount(target, anchor) {
			insert_dev(target, footer, anchor);
			append_dev(footer, div0);
			append_dev(div0, a);
			append_dev(a, span);
			append_dev(span, t0);
			append_dev(a, t1);
			append_dev(a, img);
			append_dev(footer, t2);
			append_dev(footer, div1);
			append_dev(div1, t3);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*$localization*/ 1 && t0_value !== (t0_value = /*$localization*/ ctx[0].contactUs + "")) set_data_dev(t0, t0_value);
			if (dirty & /*$localization*/ 1 && t3_value !== (t3_value = /*$localization*/ ctx[0].copyright + "")) set_data_dev(t3, t3_value);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(footer);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	let $localization;
	validate_store(localization, "localization");
	component_subscribe($$self, localization, $$value => $$invalidate(0, $localization = $$value));
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Footer> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Footer", $$slots, []);
	$$self.$capture_state = () => ({ localization, $localization });
	return [$localization];
}

class Footer extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Footer",
			options,
			id: create_fragment$6.name
		});
	}
}

/* src/routes/index.svelte generated by Svelte v3.21.0 */
const file$7 = "src/routes/index.svelte";

function create_fragment$7(ctx) {
	let t0;
	let t1;
	let main;
	let t2;
	let t3;
	let t4;
	let current;
	const background = new Background({ $$inline: true });

	const header = new Header({
			props: {
				currentObservedItem: /*currentObservedItem*/ ctx[0]
			},
			$$inline: true
		});

	const download = new Download({ $$inline: true });
	const advantages = new Advantages({ $$inline: true });
	const features = new Features({ $$inline: true });
	const footer = new Footer({ $$inline: true });

	const block = {
		c: function create() {
			create_component(background.$$.fragment);
			t0 = space();
			create_component(header.$$.fragment);
			t1 = space();
			main = element("main");
			create_component(download.$$.fragment);
			t2 = space();
			create_component(advantages.$$.fragment);
			t3 = space();
			create_component(features.$$.fragment);
			t4 = space();
			create_component(footer.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			claim_component(background.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(header.$$.fragment, nodes);
			t1 = claim_space(nodes);
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			claim_component(download.$$.fragment, main_nodes);
			t2 = claim_space(main_nodes);
			claim_component(advantages.$$.fragment, main_nodes);
			t3 = claim_space(main_nodes);
			claim_component(features.$$.fragment, main_nodes);
			main_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			claim_component(footer.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			attr_dev(main, "class", "svelte-gbim4i");
			add_location(main, file$7, 59, 0, 1307);
		},
		m: function mount(target, anchor) {
			mount_component(background, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(header, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, main, anchor);
			mount_component(download, main, null);
			append_dev(main, t2);
			mount_component(advantages, main, null);
			append_dev(main, t3);
			mount_component(features, main, null);
			insert_dev(target, t4, anchor);
			mount_component(footer, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const header_changes = {};
			if (dirty & /*currentObservedItem*/ 1) header_changes.currentObservedItem = /*currentObservedItem*/ ctx[0];
			header.$set(header_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(background.$$.fragment, local);
			transition_in(header.$$.fragment, local);
			transition_in(download.$$.fragment, local);
			transition_in(advantages.$$.fragment, local);
			transition_in(features.$$.fragment, local);
			transition_in(footer.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(background.$$.fragment, local);
			transition_out(header.$$.fragment, local);
			transition_out(download.$$.fragment, local);
			transition_out(advantages.$$.fragment, local);
			transition_out(features.$$.fragment, local);
			transition_out(footer.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(background, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(header, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(main);
			destroy_component(download);
			destroy_component(advantages);
			destroy_component(features);
			if (detaching) detach_dev(t4);
			destroy_component(footer, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$7($$self, $$props, $$invalidate) {
	let currentObservedItem = null;

	function observe() {
		const observedItems = new Map();

		function callback(entries) {
			for (const entry of entries) {
				observedItems.set(entry.target.getAttribute("id"), entry.isIntersecting);
			}

			const next = [...observedItems.entries()].reverse().find(([_, i]) => i);

			if (next && next[0]) {
				$$invalidate(0, currentObservedItem = next[0]);
			}
		}

		const io = new IntersectionObserver(callback, { threshold: 0.2 });
		const nodes = document.querySelectorAll(".path");

		for (const node of [...nodes]) {
			observedItems.set(node.getAttribute("id"), false);
			io.observe(node);
		}
	}

	onMount(() => {
		observe();
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Routes> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Routes", $$slots, []);

	$$self.$capture_state = () => ({
		onMount,
		Header,
		Background,
		Download,
		Advantages,
		Features,
		Footer,
		currentObservedItem,
		observe
	});

	$$self.$inject_state = $$props => {
		if ("currentObservedItem" in $$props) $$invalidate(0, currentObservedItem = $$props.currentObservedItem);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [currentObservedItem];
}

class Routes extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Routes",
			options,
			id: create_fragment$7.name
		});
	}
}

export default Routes;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
